- name: null
  hosts: all
  vars:
    vscode_pkg_url: https://az764295.vo.msecnd.net/stable/b3e4e68a0bc097f0ae7907b217c1119af9e03435/code_1.78.2-1683731061_arm64.deb
    realvnc_pkg_url: https://downloads.realvnc.com/download/file/vnc.files/VNC-Server-7.1.0-Linux-ARM64.deb
    etc_x11_xwrapper_config: /etc/X11/Xwrapper.config
    etc_xdg_terminator_config: /etc/xdg/terminator/config
    home_username__config_i3_config: '/home/{{ username }}/.config/i3/config'
    home_username__config_terminator_config: '/home/{{ username }}/.config/terminator/config'
    home_username__xauthority: '/home/{{ username }}/.Xauthority'
    home_username__xinitrc: '/home/{{ username }}/.xinitrc'
    # https://help.realvnc.com/hc/en-us/articles/360002251297-VNC-Server-Parameter-Reference.
    root__vnc_config_d_vncserver_x11: /root/.vnc/config.d/vncserver-x11
  tasks:
    - name: Lookup environment variables
      ansible.builtin.set_fact:
        username: '{{ lookup(''env'', ''USERNAME'') }}'
        password: '{{ lookup(''env'', ''PASSWORD'') }}'
        public_ip_address: '{{ lookup(''env'', ''PUBLIC_IP_ADDRESS'') }}'
    - name: Install Microsoft's GPG public key
      become: true
      ansible.builtin.apt_key:
        id: BC528686B50D79E339D3721CEB3E94ADBE1229CF
        url: https://packages.microsoft.com/keys/microsoft.asc
    - name: Upgrade packages
      become: true
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
    - name: Install packages
      become: true
      ansible.builtin.apt:
        pkg:
          - firefox
          - i3
          - libssl-dev
          - pkg-config
          - terminator
          - xinit
    - name: Remove packages
      become: true
      ansible.builtin.apt:
        pkg:
          - '*gnome*'
        state: absent
        autoremove: yes
        clean: yes
    - name: Install Visual Studio Code
      become: true
      ansible.builtin.apt:
        deb: '{{ vscode_pkg_url }}'
    - name: Install RealVNC
      become: true
      ansible.builtin.apt:
        deb: '{{ realvnc_pkg_url }}'
    - ansible.builtin.include_role:
        name: rust
    - ansible.builtin.include_role:
        name: i3status-rs
    - name: Copy '{{ root__vnc_config_d_vncserver_x11 }}'
      become: true
      ansible.builtin.template:
        src: vncserver-x11
        dest: '{{ root__vnc_config_d_vncserver_x11 }}'
    - name: Copy '{{ etc_x11_xwrapper_config }}'
      become: true
      ansible.builtin.template:
        src: Xwrapper.config
        dest: '{{ etc_x11_xwrapper_config }}'
    - name: Create '{{ etc_xdg_terminator_config | dirname }}'
      ansible.builtin.file:
        path: '{{ etc_xdg_terminator_config | dirname }}'
        state: directory
    - name: Create '{{ etc_xdg_terminator_config }}'
      become: true
      ansible.builtin.copy:
        content: ''
        dest: '{{ etc_xdg_terminator_config }}'
    - name: Create '{{ home_username__config_i3_config | dirname }}'
      ansible.builtin.file:
        path: '{{ home_username__config_i3_config | dirname }}'
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0755'
    - name: Copy '{{ home_username__config_i3_config }}'
      become: true
      ansible.builtin.template:
        src: .config/i3/config
        dest: '{{ home_username__config_i3_config }}'
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0644'
    - name: Create '{{ home_username__config_terminator_config | dirname }}'
      ansible.builtin.file:
        path: '{{ home_username__config_terminator_config | dirname }}'
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0755'
    - name: Copy '{{ home_username__config_terminator_config }}'
      become: true
      ansible.builtin.template:
        src: .config/terminator/config
        dest: '{{ home_username__config_terminator_config }}'
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0644'
    - name: Create '{{ home_username__xauthority }}'
      become: true
      ansible.builtin.copy:
        content: ''
        dest: '{{ home_username__xauthority }}'
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0644'
    - name: Create '{{ home_username__xinitrc }}'
      become: true
      ansible.builtin.copy:
        src: /etc/X11/xinit/xinitrc
        dest: '{{ home_username__xinitrc }}'
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0644'
    - name: Create '{{ home_username__xinitrc }}'
      become: true
      ansible.builtin.lineinfile:
        path: '{{ home_username__xinitrc }}'
        line: exec i3
    - name: Change password
      become: true
      ansible.builtin.shell: |
        echo '{{ username }}:{{ password }}' | chpasswd
    - name: Link shared object libraries
      become: true
      ansible.builtin.shell: |
        ln --symbolic /usr/lib/aarch64-linux-gnu/libbcm_host.so /usr/lib/libbcm_host.so.0
        ln --symbolic /usr/lib/aarch64-linux-gnu/libvchiq_arm.so /usr/lib/libvchiq_arm.so.0
        ln --symbolic /usr/lib/aarch64-linux-gnu/libvcos.so /usr/lib/libvcos.so.0
    - name: Start user manager instance
      become: true
      ansible.builtin.systemd:
        state: started
        name: user@1000
    - name: Start vncserver service
      become: true
      ansible.builtin.systemd:
        state: started
        name: vncserver-virtuald
    - name: Start vncserver-x11 service
      become: true
      ansible.builtin.systemd:
        state: started
        name: vncserver-x11-serviced